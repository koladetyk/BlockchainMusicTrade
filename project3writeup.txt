UML:







LIBRARIES :
Truffle: Truffle is a development framework for Ethereum that provides a suite of tools for smart contract development, testing, and deployment. It simplifies the process of compiling, deploying, and interacting with smart contracts.
Web3.js: Web3.js is a JavaScript library that allows you to interact with Ethereum nodes using HTTP or WebSocket connections. It provides a set of APIs to interact with smart contracts, send transactions, and query blockchain data.
Solidity: Solidity is the programming language used for writing smart contracts on the Ethereum platform. It is a statically-typed, contract-oriented language that is specifically designed for Ethereum.
OpenZeppelin: OpenZeppelin is a library for secure smart contract development. It provides pre-built, reusable smart contract components that follow best practices for security and functionality. You can use OpenZeppelin to implement common features such as access control, token standards, and more.

Transaction Hash:
0xb16f6dd263d5942ff32b18385811db7e1dad2f504e634f7b686809bc5ba29331
Contact Address on Sepolia test network:
 https://sepolia.etherscan.io/address/0xAA480CFf0AA8576B98148D78190BEE49e7B7A17d
Node Version: v20.6.1
Truffle Version: Truffle v5.11.5 (core: 5.11.5)
Ganache v7.9.1
Solidity v0.5.16 (solc-js)
Node v20.6.1
Web3.js v1.10.0